package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.50

import (
	"context"
	"fmt"

	"github.com/real013228/social-network/graph"
	"github.com/real013228/social-network/internal/model"
)

// CreatePost is the resolver for the createPost field.
func (r *mutationResolver) CreatePost(ctx context.Context, input model.CreatePostInput) (*model.CreatePostPayload, error) {
	panic(fmt.Errorf("not implemented: CreatePost - createPost"))
}

// Comments is the resolver for the comments field.
func (r *postResolver) Comments(ctx context.Context, obj *model.Post) ([]*model.Comment, error) {
	panic(fmt.Errorf("not implemented: Comments - comments"))
}

// Author is the resolver for the author field.
func (r *postResolver) Author(ctx context.Context, obj *model.Post) (*model.User, error) {
	panic(fmt.Errorf("not implemented: Author - author"))
}

// Posts is the resolver for the posts field.
func (r *queryResolver) Posts(ctx context.Context, filter *model.PostsFilter) (*model.PostPayload, error) {
	panic(fmt.Errorf("not implemented: Posts - posts"))
}

// Post returns graph.PostResolver implementation.
func (r *Resolver) Post() graph.PostResolver { return &postResolver{r} }

type postResolver struct{ *Resolver }
