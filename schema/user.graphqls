type User {
    id: ID!
    username: String!
    email: String!
    posts: [Post]!
}

type UserPayload {
    users: [User]
}

input UsersFilter {
    userID: ID
    pageLimit: Int!
    pageNumber: Int!
}

type NotificationPayload {
    text: String!
    postID: String!
    commentAuthorID: String!
}

type Query {
    users(filter: UsersFilter): UserPayload
    notifications(filter:UsersFilter): [NotificationPayload]
}

input CreateUserInput {
    username: String!
    email: String!
}

type CreateUserPayload {
    userId: String!
}


type Mutation {
    createUser(input: CreateUserInput!): CreateUserPayload
}