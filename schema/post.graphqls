type Post {
    id: ID!
    title: String!
    description: String!
    comments: [Comment]!
    authorID: String!
    commentsAllowed: Boolean!
}

type PostPayload {
    posts: [Post]
}

input PostsFilter {
    postID: ID
    authorID: ID
    withComments: Boolean
    pageLimit: Int!
    pageNumber: Int!
}

extend type Query {
    posts(filter: PostsFilter): PostPayload
}

input CreatePostInput {
    title: String!
    description: String!
    authorID: String!
}

type CreatePostPayload {
    post: Post!
}

input SubscribeInput {
    userID: String!
    postID: String!
}

type SubscribePayload {
    success: Boolean!
    message: String
}

extend type Mutation {
    createPost(input: CreatePostInput!): CreatePostPayload
    subscribe(input: SubscribeInput!) : SubscribePayload
}